<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-24T22:36:16 CDT" name="Loan department" finished-at="2022-05-24T22:36:16 CDT" duration-ms="141">
    <groups>
      <group name="Smoke">
        <method signature="Days1.Demo()[pri:0, instance:te.Days1@31e5415e]" name="Demo" class="te.Days1"/>
        <method signature="Days2.ploan()[pri:0, instance:te.Days2@10163d6]" name="ploan" class="te.Days2"/>
        <method signature="Days4.MobileLoginhomeloan()[pri:0, instance:te.Days4@2dde1bff]" name="MobileLoginhomeloan" class="te.Days4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-05-24T22:36:16 CDT" name="Personal Loan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="53">
      <class name="te.Days1">
        <test-method signature="Demo()[pri:0, instance:te.Days1@31e5415e]" started-at="2022-05-24T22:36:16 CDT" name="Demo" finished-at="2022-05-24T22:36:16 CDT" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at te.Days1.Demo(Days1.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:te.Days1@31e5415e]" started-at="2022-05-24T22:36:16 CDT" name="lastexecution" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- te.Days1 -->
      <class name="te.Days2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:te.Days2@10163d6]" started-at="2022-05-24T22:36:16 CDT" name="prerequiste" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:te.Days2@10163d6]" started-at="2022-05-24T22:36:16 CDT" name="ploan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- te.Days2 -->
      <class name="te.Days4">
        <test-method signature="LoginAPIhomeloan()[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="LoginAPIhomeloan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIhomeloan -->
        <test-method signature="MobileLoginhomeloan()[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="MobileLoginhomeloan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginhomeloan -->
        <test-method signature="Webloginhomeloan()[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="Webloginhomeloan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webloginhomeloan -->
        <test-method signature="shaheenMOHSIN(java.lang.String,java.lang.String)[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="shaheenMOHSIN" data-provider="getData" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shaheenMOHSIN -->
        <test-method signature="shaheenMOHSIN(java.lang.String,java.lang.String)[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="shaheenMOHSIN" data-provider="getData" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shaheenMOHSIN -->
        <test-method signature="shaheenMOHSIN(java.lang.String,java.lang.String)[pri:0, instance:te.Days4@2dde1bff]" started-at="2022-05-24T22:36:16 CDT" name="shaheenMOHSIN" data-provider="getData" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[third password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shaheenMOHSIN -->
      </class> <!-- te.Days4 -->
    </test> <!-- Personal Loan -->
    <test started-at="2022-05-24T22:36:16 CDT" name="car Loan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="9">
      <class name="te.Days1">
        <test-method is-config="true" signature="bfsuite()[pri:0, instance:te.Days1@31e5415e]" started-at="2022-05-24T22:36:16 CDT" name="bfsuite" finished-at="2022-05-24T22:36:16 CDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfsuite -->
        <test-method is-config="true" signature="aftsuite()[pri:0, instance:te.Days1@31e5415e]" started-at="2022-05-24T22:36:16 CDT" name="aftsuite" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftsuite -->
      </class> <!-- te.Days1 -->
      <class name="te.Days3">
        <test-method is-config="true" signature="beforeclas()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="beforeclas" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclas -->
        <test-method signature="APIcarloan()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="APIcarloan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="afterevery" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="Weblogincarloan()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="Weblogincarloan" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Weblogincarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="afterevery" finished-at="2022-05-24T22:36:16 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afterclas()[pri:0, instance:te.Days3@32ee6fee]" started-at="2022-05-24T22:36:16 CDT" name="afterclas" finished-at="2022-05-24T22:36:16 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclas -->
      </class> <!-- te.Days3 -->
    </test> <!-- car Loan -->
  </suite> <!-- Loan department -->
</testng-results>
